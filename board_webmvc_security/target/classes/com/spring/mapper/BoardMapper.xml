<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.BoardMapper">

	<!-- 전체 조회  -->
	<!-- <select id="list" resultType="com.spring.domain.BoardDTO">
		select bno,title,writer,regdate,updatedate from spring_board order by bno desc, regdate desc
	</select> -->
	
	<!-- 페이지 나누기 조회  -->
	<select id="list" resultType="com.spring.domain.BoardDTO">
		
		<![CDATA[
			select bno,title, writer,regdate,updatedate,replycnt
			from(select /*+index_desc(spring_board pk_spring_board)*/rownum rn,bno,title, writer,regdate,updatedate,replycnt
   		    	 from spring_board
  	    	     where
  	    ]]>	
  	    	<include refid="criteria"></include>
  	    <![CDATA[     
  	    	     rownum<=#{page}*#{amount})
			where rn>(#{page}-1)*#{amount}
		]]>
	</select> 
	<!-- 페이지 나누기 조회  -->
	
	<!-- 전체 게시물 갯수 -->
	<select id="totalCnt" resultType="java.lang.Integer">
		select count(*) from spring_board
		where 
  	    	<include refid="criteria"></include>
  	     bno >0
	</select>
	<!-- 전체 게시물 갯수 -->
	
	<update id="updateReplyCnt" >
		update spring_board set replycnt = replycnt + #{amount} where bno=#{bno}
	</update>
	
	<!-- 동적 쿼리문 만들기 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<trim prefix="OR">
					<choose>
						<when test="type=='T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type=='C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type=='W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	<!-- 동적 쿼리문 만들기 -->
	
	
	<insert id="insert">
		
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
			select seq_board.nextval from dual
		</selectKey>
		
		insert into spring_board(bno,title,content,writer) values(#{bno},#{title},#{content},#{writer}) 
	</insert>
	
	<select id="read" resultType="com.spring.domain.BoardDTO">
		select bno,title,content,writer from spring_board where bno=#{bno}
	</select>
	
	<!-- 특정 번호 조회 + 파일 정보 시작-->
	<resultMap type="com.spring.domain.BoardDTO" id="boardMap">
		<id property="bno" column="bno"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="writer" column="writer"/>
		<collection property="attachList" resultMap="attachMap"></collection>
	</resultMap>
	
	<resultMap type="com.spring.domain.AttachFileDTO" id="attachMap">
		<result property="uuid" column="title"/>
		<result property="uploadPath" column="uploadPath"/>
		<result property="fileName" column="fileName"/>
		<result property="fileType" column="filetype"/>
		<result property="bno" column="bno"/>
	</resultMap>
	
	<select id="readAttach" resultMap="boardMap">
		select title,content,writer,a.bno,uuid,uploadpath,filetype,filename 
		from spring_board b join spring_attach a on b.bno=a.bno 
		where b.bno=#{bno}
	</select>
	<!-- 특정 번호 조회 + 파일 정보 종료 -->
	
	<update id="update">
		update spring_board set title=#{title} ,content=#{content} ,updatedate= sysdate where bno=#{bno}
	</update>
	
	<delete id="delete">
		delete from spring_board where bno=#{bno}
	</delete>
	
</mapper>